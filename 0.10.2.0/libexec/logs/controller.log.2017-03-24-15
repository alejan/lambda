[2017-03-24 15:00:45,364] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-03-24 15:00:45,411] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([postcliente,0] -> List(0), [rutas,0] -> List(0))) (kafka.controller.KafkaController)
[2017-03-24 15:00:45,411] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-03-24 15:00:45,412] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2017-03-24 15:05:45,360] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-03-24 15:05:45,374] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([postcliente,0] -> List(0), [rutas,0] -> List(0))) (kafka.controller.KafkaController)
[2017-03-24 15:05:45,375] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-03-24 15:05:45,375] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2017-03-24 15:10:45,357] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-03-24 15:10:45,407] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([postcliente,0] -> List(0), [rutas,0] -> List(0))) (kafka.controller.KafkaController)
[2017-03-24 15:10:45,407] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-03-24 15:10:45,407] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2017-03-24 15:15:45,353] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-03-24 15:15:45,395] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([postcliente,0] -> List(0), [rutas,0] -> List(0))) (kafka.controller.KafkaController)
[2017-03-24 15:15:45,395] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-03-24 15:15:45,395] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2017-03-24 15:17:52,561] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics postcliente to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-03-24 15:17:52,604] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics postcliente (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-03-24 15:17:52,644] INFO [delete-topics-thread-0], Handling deletion for topics postcliente (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-03-24 15:17:52,703] DEBUG [Replica state machine on controller 0]: Are all replicas for topic postcliente deleted Map([Topic=postcliente,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-03-24 15:17:52,746] INFO [delete-topics-thread-0], Deletion of topic postcliente (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-03-24 15:17:52,992] INFO [Topic Deletion Manager 0], Topic deletion callback for postcliente (kafka.controller.TopicDeletionManager)
[2017-03-24 15:17:53,076] INFO [Topic Deletion Manager 0], Partition deletion callback for [postcliente,0] (kafka.controller.TopicDeletionManager)
[2017-03-24 15:17:53,172] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-03-24 15:17:53,189] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=postcliente,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-03-24 15:17:53,213] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [postcliente,0]. (kafka.controller.KafkaController)
[2017-03-24 15:17:53,333] INFO [Controller 0]: New leader and ISR for partition [postcliente,0] is {"leader":-1,"leader_epoch":14,"isr":[]} (kafka.controller.KafkaController)
[2017-03-24 15:17:53,422] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-03-24 15:17:53,423] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=postcliente,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-03-24 15:17:53,522] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=postcliente,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-03-24 15:17:53,523] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=postcliente,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-03-24 15:17:53,537] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=postcliente,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-03-24 15:17:53,537] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-03-24 15:17:53,537] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-03-24 15:17:53,796] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=postcliente,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-03-24 15:17:53,802] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=postcliente,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-03-24 15:17:53,802] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=postcliente,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-03-24 15:17:53,806] INFO [delete-topics-thread-0], Handling deletion for topics postcliente (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-03-24 15:17:53,808] DEBUG [Replica state machine on controller 0]: Are all replicas for topic postcliente deleted Map([Topic=postcliente,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-03-24 15:17:53,810] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=postcliente,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-03-24 15:17:53,813] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [postcliente,0] (kafka.controller.PartitionStateMachine)
[2017-03-24 15:17:53,848] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [postcliente,0] (kafka.controller.PartitionStateMachine)
[2017-03-24 15:17:53,865] INFO [delete-topics-thread-0], Deletion of topic postcliente successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-03-24 15:17:53,869] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-03-24 15:17:53,870] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children rutas (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-03-24 15:17:53,873] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-03-24 15:17:53,875] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-03-24 15:20:45,349] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-03-24 15:20:45,350] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([rutas,0] -> List(0))) (kafka.controller.KafkaController)
[2017-03-24 15:20:45,350] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-03-24 15:20:45,350] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2017-03-24 15:25:45,347] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-03-24 15:25:45,347] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([rutas,0] -> List(0))) (kafka.controller.KafkaController)
[2017-03-24 15:25:45,348] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-03-24 15:25:45,348] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2017-03-24 15:30:45,341] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-03-24 15:30:45,342] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([rutas,0] -> List(0))) (kafka.controller.KafkaController)
[2017-03-24 15:30:45,343] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-03-24 15:30:45,343] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2017-03-24 15:35:45,336] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-03-24 15:35:45,349] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([rutas,0] -> List(0))) (kafka.controller.KafkaController)
[2017-03-24 15:35:45,350] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-03-24 15:35:45,350] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2017-03-24 15:38:05,426] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children postcliente,rutas (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-03-24 15:38:05,524] INFO [TopicChangeListener on Controller 0]: New topics: [Set(postcliente)], deleted topics: [Set()], new partition replica assignment [Map([postcliente,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-03-24 15:38:05,525] INFO [Controller 0]: New topic creation callback for [postcliente,0] (kafka.controller.KafkaController)
[2017-03-24 15:38:05,559] INFO [Controller 0]: New partition creation callback for [postcliente,0] (kafka.controller.KafkaController)
[2017-03-24 15:38:05,560] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [postcliente,0] (kafka.controller.PartitionStateMachine)
[2017-03-24 15:38:05,582] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=postcliente,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-03-24 15:38:05,585] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [postcliente,0] (kafka.controller.PartitionStateMachine)
[2017-03-24 15:38:05,586] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [postcliente,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-03-24 15:38:05,587] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [postcliente,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:33) (kafka.controller.PartitionStateMachine)
[2017-03-24 15:38:05,615] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=postcliente,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-03-24 15:38:05,618] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-03-24 15:40:45,336] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-03-24 15:40:45,362] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([postcliente,0] -> List(0), [rutas,0] -> List(0))) (kafka.controller.KafkaController)
[2017-03-24 15:40:45,363] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-03-24 15:40:45,363] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2017-03-24 15:45:45,330] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-03-24 15:45:45,361] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([postcliente,0] -> List(0), [rutas,0] -> List(0))) (kafka.controller.KafkaController)
[2017-03-24 15:45:45,361] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-03-24 15:45:45,361] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2017-03-24 15:50:45,327] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-03-24 15:50:45,328] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([postcliente,0] -> List(0), [rutas,0] -> List(0))) (kafka.controller.KafkaController)
[2017-03-24 15:50:45,328] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-03-24 15:50:45,328] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
[2017-03-24 15:55:45,326] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-03-24 15:55:45,348] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([postcliente,0] -> List(0), [rutas,0] -> List(0))) (kafka.controller.KafkaController)
[2017-03-24 15:55:45,348] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-03-24 15:55:45,348] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0,000000 (kafka.controller.KafkaController)
